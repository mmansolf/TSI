% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/core.R
\name{mice.impute.truescore}
\alias{mice.impute.truescore}
\title{Custom mice imputation function for true score imputation}
\usage{
mice.impute.truescore(y, ry, x, wy = NULL, calibration = NULL, ...)
}
\arguments{
\item{y}{Vector to be imputed}

\item{ry}{Logical vector of length \code{length(y)} indicating the
the subset \code{y[ry]} of elements in \code{y} to which the imputation
model is fitted. The \code{ry} generally distinguishes the observed
(\code{TRUE}) and missing values (\code{FALSE}) in \code{y}.}

\item{x}{Numeric design matrix with \code{length(y)} rows with predictors for
\code{y}. Matrix \code{x} may have no missing values.}

\item{wy}{Logical vector of length \code{length(y)}. A \code{TRUE} value
indicates locations in \code{y} for which imputations are created.}

\item{calibration}{A list of calibration information used for true score
imputation. See below for details.}

\item{...}{Other named arguments.}
}
\value{
Vector with imputed data, same type as \code{y}, and of length
\code{sum(wy)}
}
\description{
This custom imputation function is used with the \code{mice}
package by setting method='truescore' for each variable imputed using
true score imputation, which will call this custom imputation function
\code{mice.impute.truescore}. Although possible, this function is not
meant to be run on its own; see documentation for other \code{mice}
imputation files, e.g., \code{\link[mice]{mice.impute.pmm}}, for details
on this usage. Example usage through the \code{mice} package is provided in
Examples below.
}
\section{Passing Calibration Information to \code{mice}}{


The \code{calibration} parameter is passed to the \code{mice} function
using the \code{blots} input. For each imputed true score, provide the
\code{calibration} information as a named list. The following elements
are required, in any order:

\describe{
  \item{\code{OSNAME}}{Name of the variable in the data set containing the
  observed scores used for true score imputation}
  \item{\code{scoreType}}{Type of score provided. Current options are
  \code{'CTT'}, corresponding to the classical test theory model of
  reliability; \code{'EAP'}, corresponding to expected a posteriori
  scoring in item response theory; and \code{'ML'}, corresponding to
  maximum likelihood scoring in item response theory. Each
  \code{scoreType} requires specific other elements to be provided
  in \code{calibration} data; see below for these conditional elements.}
  \item{\code{mean}}{The mean of the score metric from calibration.
  For example, T scores are calibrated to a mean of 50, so if T scores
  are used, \code{mean} should be set to \code{50}.}
  \item{\code{var_ts}}{The variance of the score metric from calibration.
  For example, T scores are calibrated to a standard deviation of 10, so
  if T scores are used, \code{var_ts} should be set to \code{100}.}
}

In addition, each \code{scoreType} requires specific other elements
to be provided in \code{calibration} data:

\describe{
  \item{\code{SENAME}}{Required if \code{scoreType == 'EAP'} or
  \code{scoreType == 'ML'}. Name of the variable in the data set
  containing the standard error estimates of the observed scores
  provided in \code{OSNAME}.}
  \item{\code{reliability}}{Required if \code{scoreType == 'CTT'}.
  Reliability estimate denoting the ratio of true score to
  observed score variance, as estimated from calibration.}
}
}

\section{Specifying the Predictor Matrix}{

Based on (unpublished) simulation results, it seems the best way to specify
the predictor matrix for use in \code{mice} is for true scores to be
predicted from all observed variables but \emph{not} to predict other
missing data from the imputed true scores. This is the default behavior
when the \code{TSI} function is used, and we recommend, unless further
research identifies otherwise, that the same be done when using this
function to interact with \code{mice} directly.
}

\examples{
##############
# CTT SCORES #
#add empty (NA) variables to data set to store true scores
data_ctt_2=data_ctt
data_ctt_2$TRUE_w=NA

#true score imputation
set.seed(0)
mice.data=mice(data_ctt_2,m=5,
  blocks=list('TRUE_w'),
  method='truescore',
  calibration=list(OSNAME='w',
                   scoreType='CTT',
                   reliability=0.6,
                   mean_ts=0,
                   var_ts=1),
  predictorMatrix=matrix(c(1,1,0),1,3,byrow=T),
  printFlag=F,
  remove.constant=F)
mice.data

#analyze with imputed true scores
pool(with(mice.data,lm(TRUE_w~y)))

#compare standard deviations of observed and imputed true scores
mice.data=complete(mice.data,'all')
sds=sapply(mice.data,function(d)apply(d,2,sd))
apply(sds,1,mean)

##############
# EAP SCORES #
#add empty (NA) variables to data set to store true scores
data_eap_2=data_eap
data_eap_2$Tx=NA
data_eap_2$Ty=NA

#true score imputation
set.seed(0)
mice.data=mice(data_eap_2,m=5,maxit=5,
  method=c('pmm','pmm','pmm','pmm','pmm',
           'truescore','truescore'),
  blocks=list(Fx="Fx",Fy="Fy",SE.Fx="SE.Fx",SE.Fy="SE.Fy",m="m",
              Tx='Tx',Ty='Ty'),
  blots=list(Tx=list(calibration=list(OSNAME='Fx',
                                      SENAME='SE.Fx',
                                      scoreType='EAP',
                                      mean=50,
                                      var_ts=100,
                                      separated=T)),
             Ty=list(calibration=list(OSNAME='Fy',
                                      SENAME="SE.Fy",
                                      scoreType='EAP',
                                      mean=50,
                                      var_ts=100,
                                      separated=T))),
  predictorMatrix=matrix(c(0,1,1,1,1,0,0,
                           1,0,1,1,1,0,0,
                           1,1,0,1,1,0,0,
                           1,1,1,0,1,0,0,
                           1,1,1,1,0,0,0,
                           1,1,1,1,1,0,0,
                           1,1,1,1,1,0,0),7,7,byrow=T),
  printFlag=F,
  remove.constant=F)
mice.data

#multiple regression with imputed true scores
pool(with(mice.data,lm(Ty~Tx+m)))
}
